import * as _unhead_schema from '@unhead/schema';
import { HeadPlugin } from '@unhead/schema';
import { HeadTag } from '@unhead/schema/dist';

type Arrayable<T> = T | Array<T>;
declare function asArray<T>(value: Arrayable<T>): T[];

declare const SelfClosingTags: string[];
declare const TagsWithInnerContent: string[];
declare const HasElementTags: string[];
declare const ValidHeadTags: string[];
declare const UniqueTags: string[];
declare const TagConfigKeys: string[];

interface DedupesTagsPluginOptions {
    dedupeKeys?: string[];
}
declare function tagDedupeKey<T extends HeadTag>(tag: T, fn?: (key: string) => boolean): string | false;
declare const DedupesTagsPlugin: (options?: DedupesTagsPluginOptions) => _unhead_schema.HeadPlugin;

declare function defineHeadPlugin(plugin: HeadPlugin): HeadPlugin;

declare function hashCode(s: string): string;

export { Arrayable, DedupesTagsPlugin, DedupesTagsPluginOptions, HasElementTags, SelfClosingTags, TagConfigKeys, TagsWithInnerContent, UniqueTags, ValidHeadTags, asArray, defineHeadPlugin, hashCode, tagDedupeKey };
